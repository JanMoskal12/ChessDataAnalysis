---
title: "ChessDataAnalysyis"
author: "Jan Moskal"
format: html
editor: visual
---

```{r, include=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)
library(networkD3)
library(plotly)
library(gganimate)
library(plotly)
library(kableExtra)
library(knitr)
library(treemap)
library(ggridges)
library(RColorBrewer)
```

```{r, include=FALSE}
data <- readRDS("cleaned_data.rds")


View(data)
glimpse(data)
```

### Speed:

Przyglądam się tutaj, jak dzielą się wygrane i przegrane dla formatów czasowych

```{r}

data %>%  
  ggplot(aes(x = factor(speed, levels = c("ultraBullet", "bullet", "blitz", "rapid","classical")), fill = winner)) +
  geom_bar(position = "fill") +
  labs(x = NULL, y = "Stosunek wygranych,przegranych i zremisowanych meczy", fill = "Zwycięzca", 
       title = "Dystrybucja zwycięstw dla poszczególnych formatów czasowych") +
  scale_fill_manual(values = c("black" ="black", "draw" = "grey", "white" = "white")) +
  theme(panel.background = element_rect(fill = "lightgrey"),
        legend.background = element_rect(fill = "lightblue"),
        plot.background = element_rect(fill = "lightgrey")) 

  
```

Jak widać wraz z większą ilością czasu gry rośnie liczba remisów. Jest to jak najbardziej logiczne, gracze mają więcej czasu na analizę, planowanie i liczenie wariantów, po obu stronach popełniają mniej poważnych błędów przez co partia jest bardziej wyrównana. Widać również, że wygrane graczy z białymi i czarnymi figurami są na podobnym poziomie, to zjawisko wynika z charakterystyki analizowanego zestawu danych. Mamy tutaj do czynienia z najlepszymi graczami w konkretnych formatach czasowych na Lichess. Silniejsi i bardziej doświadczeni gracze są w stanie efektywnie korzytsać z obu stron planszy, co prowadzi do równomiernej dystrybucji zwycięstw.

Dla kontrastu dane dotyczące przeciętnych graczy Lichessa:

Sprawdzam czy któreś otwarcia pojawiają się częściej w poszczególnych formatach czasowych.

```{r}
ubu <- data %>% filter(speed == "ultraBullet") %>% 
  group_by(opening_name) %>%  count(sort = TRUE) %>% 
  head(n = 10)# defensywne i elastyczne, "krótkie" ruchy bardzo popularne

bu <- data %>% filter(speed == "bullet") %>% 
  group_by(opening_name) %>%  count(sort = TRUE) %>% 
  head(n = 10) #elastyczne trochę więcej ruchów z 1.e4, dużo większa liczba unikalnych otwarć

bl <- data %>% filter(speed == "blitz") %>% 
  group_by(opening_name) %>%  count(sort = TRUE) %>% 
  head(n = 10)# mniej defensywnie, obrona sycylisjka (więcej 1.e4)

ra <- data %>%
  filter(speed == "rapid" & !is.na(opening_name)) %>% 
  group_by(opening_name) %>%  count(sort = TRUE) %>% 
  head(n = 10) # solidne, bardziej agresywne otwarcia sporo 1.e4 caro-kann

cl <- data %>% filter(speed == "classical") %>% 
  group_by(opening_name) %>%  count(sort = TRUE) %>% 
  head(n = 10)# solidne, więcej 1.e4

number_of_openings <- data.frame( 
  c(
  "UltraBullet",
  "Bullet",
  "Blitz",
  "Rapid",
  "Classical"
  ),
  c(
  nrow(data %>% filter(speed == "ultraBullet") %>% group_by(opening_name) %>%  count(sort = TRUE)),
  nrow(data %>% filter(speed == "bullet") %>% group_by(opening_name) %>%  count(sort = TRUE)),
  nrow(data %>% filter(speed == "blitz") %>% group_by(opening_name) %>%  count(sort = TRUE)),
  nrow(data %>% filter(speed == "rapid" & !is.na(opening_name)) %>% group_by(opening_name) %>%  count(sort = TRUE)),
  nrow(data %>% filter(speed == "classical") %>% group_by(opening_name) %>%  count(sort = TRUE)))
  )

colnames(number_of_openings) <- c("Format czasowy", "Liczba użytych otwarć w danym formacie")
number_openings_table <- kable(number_of_openings) %>%
  kable_styling(bootstrap_options = "striped", full_width = FALSE)


ubu_opening <- data %>% 
  filter(speed == "ultraBullet") %>%
  group_by(opening_name) %>%
  count(sort = TRUE) %>% 
  head(n = 10)

bu_opening <- data %>%
  filter(speed == "bullet") %>% 
  group_by(opening_name) %>%
  count(sort = TRUE) %>% 
  head(n = 10)

bl_opening <- data %>%
  filter(speed == "blitz") %>% 
  group_by(opening_name) %>%
  count(sort = TRUE) %>% 
  head(n = 10)

ra_opening <- data %>%
  filter(!is.na(opening_name)) %>% 
  filter(speed == "rapid") %>% 
  group_by(opening_name) %>%
  count(sort = TRUE) %>% 
  head(n = 10)

cl_opening <- data %>%
  filter(speed == "classical") %>% 
  group_by(opening_name) %>%
  count(sort = TRUE) %>% 
  head(n = 10)

colnames(ubu_opening) <- c("UltraBullet Top 10 Otwarć", "Liczba meczy")
colnames(bu_opening) <- c("Bullet Top 10 Otwarć", "Liczba meczy")
colnames(bl_opening) <- c("Blitz Top 10 Otwarć", "Liczba meczy")
colnames(ra_opening) <- c("Rapid Top 10 Otwarć", "Liczba meczy")
colnames(cl_opening) <- c("Classical Top 10 Otwarć", "Liczba meczy")

ubu_table <- kable(ubu_opening) %>%
  kable_styling(bootstrap_options = "striped", full_width = FALSE) %>% 
  row_spec(9 , background = "yellow", bold = TRUE, color = "black") %>% 
  row_spec(c(4, 7), background = "orange", bold = TRUE, color = "black") %>% 
  row_spec(c(1, 2, 3, 5, 6, 8, 10), background = "red", bold = TRUE, color = "black")

bu_table <- kable(bu_opening) %>%
  kable_styling(bootstrap_options = "striped", full_width = FALSE) %>% 
  row_spec(c(2, 4), background = "green", bold = TRUE, color = "black") %>% 
  row_spec(c(7, 10), background = "yellow", bold = TRUE, color = "black") %>% 
  row_spec(c(1, 3, 5, 6), background = "orange", bold = TRUE, color = "black") %>% 
  row_spec(c(8, 9), background = "red", bold = TRUE, color = "black")

bl_table <- kable(bl_opening) %>%
  kable_styling(bootstrap_options = "striped", full_width = FALSE) %>% 
  row_spec(c(1, 6), background = "green", bold = TRUE, color = "black") %>% 
  row_spec(c(5, 9), background = "yellow", bold = TRUE, color = "black") %>% 
  row_spec(c(3, 8, 10), background = "orange", bold = TRUE, color = "black") %>% 
  row_spec(c(2, 4, 7), background = "red", bold = TRUE, color = "black")

ra_table <- kable(ra_opening) %>%
  kable_styling(bootstrap_options = "striped", full_width = FALSE) %>% 
  row_spec(c(1, 3), background = "green", bold = TRUE, color = "black") %>% 
  row_spec(7, background = "yellow", bold = TRUE, color = "black") %>% 
  row_spec(c(2, 6, 8, 9), background = "orange", bold = TRUE, color = "black") %>% 
  row_spec(c(4, 5, 10), background = "red", bold = TRUE, color = "black")

cl_table <- kable(cl_opening) %>%
  kable_styling(bootstrap_options = "striped", full_width = FALSE) %>% 
  row_spec(c(1, 2), background = "green", bold = TRUE, color = "black") %>% 
  row_spec(c(3, 6, 8), background = "orange", bold = TRUE, color = "black") %>% 
  row_spec(c(4, 5, 7, 9, 10), background = "red", bold = TRUE, color = "black")

save_kable(ubu_table, file = "ubu_table.html")
save_kable(bu_table, file = "bu_table.html")
save_kable(bl_table, file = "bl_table.html")
save_kable(ra_table, file = "ra_table.html")
save_kable(cl_table, file = "cl_table.html")
save_kable(number_openings_table, file = "n_openings_table.html")
tables_list <- list(ubu$opening_name, bu$opening_name, bl$opening_name, ra$opening_name, cl$opening_name)
count_values <- function(tables_list) {
  all_values <- unlist(tables_list)
  value_counts <- table(all_values)
  return(data.frame(value = names(value_counts), count = as.numeric(value_counts)))
}
result <- count_values(tables_list)
```

Liczba unikalnych otwarć wzrasta wraz z długością gry. W skrócie, w miarę wydłużania się czasu na partię, gracze są bardziej skłonni eksperymentować z różnymi otwarciami, a strategie stają się bardziej zróżnicowane. W szybszych formatach często dominują ruchy elastyczne, a w dłuższych partach pojawiają się bardziej solidne i strategiczne otwarcia.

Jak wygląda rozkład procentowy tytułów graczy w zależności od formatu czasowego?

```{r}
w_players <- data %>%
  select(speed, players_white_user_name, players_white_user_title) %>%
  rename(player = players_white_user_name, 
         title = players_white_user_title)
b_players <- data %>%
  select(speed, players_black_user_name, players_black_user_title) %>% 
    rename(player = players_black_user_name, 
         title = players_black_user_title)


players_titles <- rbind(w_players, b_players) %>% distinct(player, speed, .keep_all = TRUE) # Wszyscy gracze z bazy z ich tytułami (liczeni kilukrotnie po formacie czasowym)

most_comon_titles <- data %>% 
  group_by(players_white_user_title) %>% 
  count(sort = TRUE) %>%  filter(n > 10)

players_titles %>% 
  filter(title %in% most_comon_titles$players_white_user_title) %>% 
  ggplot(aes(x = fct_infreq(speed), fill = title)) +
  geom_bar() +
  labs(x = NULL, y = "Liczba graczy mająca gry w danym formacie",
       title = "Dystrybucja tytułów graczy w zależności od formatu czasowego") +
  theme_minimal() +
  theme(panel.background = element_rect(fill = "lightgrey"),
        legend.background = element_rect(fill = "lightblue"),
        plot.background = element_rect(fill = "lightgrey")) 

players_titles %>% 
  filter(title %in% most_comon_titles$players_white_user_title) %>% 
  ggplot(aes(x = fct_infreq(speed), fill = title)) +
  geom_bar(position = "fill") +
  labs(title = "Udział procentowy tytułów graczy w zależności od formatu czasowego",
       x = NULL,
       y = "Proporcje procentowe tytułów",
       fill = "Tytuł gracza") +
  theme_minimal() +
  theme(panel.background = element_rect(fill = "lightgrey"),
        legend.background = element_rect(fill = "lightblue"),
        plot.background = element_rect(fill = "lightgrey")) 
  ggsave("percentage_of_titles_by_time_format.png")
```

Taki rozkład graczy tytulowanych dla każdego formatu czasowego jest z pewnością związany z umiejętnościami i doświadczeniem graczy. Silni gracze mogą być bardziej skłonni do wybierania szybszych partii, podczas gdy gracze bez tytułów mogą preferować dłuższe partie, gdzie mają więcej czasu na analizę i naukę. To zjawisko może wpływać na obserwowaną dystrybucję tytułów w różnych formatach czasowych. Wykres ten ukazuje wiele rzeczy, część może wydawać się nieintuicyjna np. stosunek graczy bez tytułu do wszystkich graczy spada wraz ze spadkiem długości meczu, jednak nie dla ultraBulleta, dlaczego? Moje hipoteza to możliwość unikania ultraBulleta przez graczy tytułowanych, ponieważ preferują bardziej zaawansowane i strategiczne gry, gdzie ich umiejętności są lepiej wykorzystywane. UltraBullet, charakteryzujący się szybkimi ruchami i chaotyczną rozgrywką, przyciąga różnorodne grupy graczy, a dominacja graczy bez tytułów może wynikać z bardziej rekreacyjnego podejścia do tej formy rozgrywki.

Jak powiązany jest ranking graczy z ich tytułami dla konkretnych formatów szachowych?

```{r}
w_players_rt <- data %>%
  select(players_white_user_title, players_white_user_name, players_white_rating, speed) %>%
  rename(player = players_white_user_name, 
         title = players_white_user_title,
         rating = players_white_rating)

b_players_rt <- data %>%
  select(players_black_user_title, players_black_user_name, players_black_rating, speed) %>% 
    rename(player = players_black_user_name, 
           title = players_black_user_title,
           rating = players_black_rating)

players_ratings_titles <- rbind(w_players_rt, b_players_rt) %>%
  distinct(player, speed, .keep_all = TRUE)

players_ratings_titles %>% 
  filter(title %in% most_comon_titles$players_white_user_title) %>%
  ggplot(aes(x = reorder(title, -rating), y = rating, fill = reorder(title, -rating))) +
  geom_violin() +
  labs(y = "Ranking gracza",
       x = "Tytuł gracza",
       title = "Związek rankingu z tytułem gracza dla poszczególnych formatów czasowych") +
  facet_wrap(~speed) +
  theme_minimal() +
  theme(panel.background = element_rect(fill = "lightgrey"),
        legend.position = "none",
        plot.background = element_rect(fill = "lightgrey"),
        plot.title = element_text(hjust = 0.2, face = "bold", size = 13))   


ggsave("rating_VS_title_for_each_speed.png")
```

Nie ma tutaj nic zaskakującego gracze, gracze z najwyższymi tytułami mają najwyższe rankingi

Czy istnieje związek między rankiem graczy a formatem czasowym?

```{r}
w_players_r <- data %>%
  select(speed, players_white_user_name, players_white_rating) %>%
  rename(player = players_white_user_name, 
         rating = players_white_rating)

b_players_r <- data %>%
  select(speed, players_black_user_name, players_black_rating) %>% 
    rename(player = players_black_user_name, 
         rating = players_black_rating)


players_ratings <- rbind(w_players_r, b_players_r) %>% distinct(player, speed, .keep_all = TRUE) # Zamiast usuwać powtarzające się to zamienić na średnią to dać średnią

label_info <- data.frame(
  c("Ultra Bullet", "Bullet", "Blitz", "Rapid", "Classical"),
  c(2000, 2800, 2650, 2450, 2100),
  c(120, 180, 350, 430, 440)
)
colnames(label_info) <- c("speed", "rating", "n")

players_ratings %>% 
  group_by(speed) %>% 
  ggplot(aes(x = rating, color = speed)) +
  geom_freqpoly(linewidth = 2) +
  geom_text(data = label_info,
            aes(x = rating, y = n, label = speed, color = speed),
            fontface = "bold", size = 5) +
  theme_minimal() +
  theme(legend.position = "none",
        plot.title = element_text(face = "bold", hjust = 0.2, size = 14),
        panel.background = element_rect(fill = "lightgrey"),
        plot.background = element_rect(fill = "lightgrey")) +
  labs(title = "Związek między rankiem graczy, a formatem czasowym",
       x = "Ranking gracza",
       y = "Liczba graczy")

ggsave("rating_VS_speed.png")
```

Tutaj widać, to o czym wcześniej mówiłem to znaczy gracze bez tytułów, wybierają chętniej partie z wiekszą ilością czasu, za to gracze z tytułami te krótsze formaty. Tutaj po rankingach można zobaczyć to samo.

Jak ACPL różni się między konkretnymi formatami czasowymi?

```{r}
w_players_acpl <- data %>%
  select(speed, players_white_user_name, players_white_analysis_acpl) %>%
  rename(player = players_white_user_name, 
         acpl = players_white_analysis_acpl)

b_players_acpl <- data %>%
  select(speed, players_black_user_name, players_black_analysis_acpl) %>% 
    rename(player = players_black_user_name, 
           acpl = players_black_analysis_acpl)

players_acpl <- rbind(w_players_acpl, b_players_acpl) %>% 
  distinct(player, speed, .keep_all = TRUE)


players_acpl %>% 
  ggplot(aes(y = fct_reorder(speed, -acpl), x = acpl, fill = speed)) +
  geom_density_ridges() +
  theme_ridges() +
  labs(title = "ACPL dla poszczególnych formatów czasowych",
       y = NULL,
       x = "Average Centipawn Loss dla graczy") +

  theme(legend.position = "none",
        axis.title.x = element_text(hjust = 0.4),
        plot.title = element_text(face = "bold", hjust = 0.2, size = 14),
        panel.background = element_rect(fill = "lightgrey"),
        plot.background = element_rect(fill = "lightgrey"))

ggsave("acpl_for_each_speed.png")
```

Tak jak można było się spodziewać, w grach z większym ograniczniem czasowym gracze popełniają więcej poważnych błędów

### Status:

Jak będzię wyglądała dystrybucja poszczególnych statusów dla różnych formatów czasowych?

```{r}
tree_data <- data %>% 
  filter(!(status %in% c("cheat", "noStart", "stalemate", "timeout"))) %>% 
  group_by(speed, status) %>% 
  count() %>% 
  filter(n > 200)

treemap(tree_data,
        index = c("speed", "status"),
        vSize = "n", type="index",
        fontsize.labels=c(15,12),                
        fontcolor.labels=c("white","orange"),    
        fontface.labels=c(2,1),                  
        bg.labels=c("transparent"),              
        align.labels=list(
          c("center", "center"), 
          c("right", "bottom")
        ),                                  
        overlap.labels=0.5,                     
        inflate.labels=F,                        
        title = "Rozkład wartości poszczególnych statusów dla różnych formatów czasowych"
)
```

Tak jak można było się spodziewać więcej przegranych na czas będzie dla krótkich partii, za to więcej poddań i remisów dla tych dłuższych.

### Players user provisional:

Czy gracze tymczasowi mają tendencję do częstszego czy rzadszego wygrywania?

```{r}
data %>% 
  ggplot(aes(x = players_white_provisional, fill = winner)) +
  geom_bar(position = "fill")

data %>% 
  ggplot(aes(x = players_black_provisional, fill = winner)) +
  geom_bar(position = "fill")

# Gracze z nowymi kontami mają sporo więcej porażek
```

Czy istnieje związek między graczem tymczasowym, a formatem czasowym?

```{r}
data %>% 
  mutate(provisional = players_white_provisional | players_black_provisional) %>% 
  ggplot(aes(x = fct_infreq(speed, w = as.integer(provisional)), fill = provisional)) +
  geom_bar()
```

### Moves:

Jak wygląda dystrybucja dla pierwszego ruchu w zależności od formatu czasowego?

```{r}
first_move_data <- data %>% 
  mutate(first_move = str_extract(moves, "^\\w+"))
  
top_5_moves <- first_move_data %>% 
  count(first_move, sort = TRUE) %>% 
  head(n = 5) 
  
  first_move_data %>% 
  filter(first_move %in% top_5_moves$first_move) %>% 
  ggplot(aes(x = speed, fill = first_move)) +
  geom_bar(position = "fill") +
  coord_polar()
  
# Do poprawienia ale do dodania
```

### Duration:

Jaki jest związek między długością gry w sekundach, a ACPL?

```{r}
data %>% 
  mutate(duration_in_seconds = duration_in_miliseconds / 1000) %>% 
  ggplot(aes(y = players_white_analysis_acpl, x = duration_in_seconds)) +
  geom_point(alpha = 0.2, color = "red") +
  geom_smooth() +
  scale_y_continuous(breaks = seq(from = 0, to = 200, by = 20)) +
  ylim(0, 200) +
  xlim(0, 10000) 
```

```{r}
players_titles_connections <- data %>% 
  mutate(winner = case_when(
    winner == "white" ~ 1,
    winner == "black" ~ 0,
    winner == "draw" ~ 0.5)) %>% 
  group_by(players_white_user_title, players_black_user_title) %>% 
  summarise(n = n(),
            mean_white_winner = mean(winner)) %>% 
  filter(n > 5) %>% 
  arrange(mean_white_winner) #%>% 
  #filter(players_white_user_title == "None" | players_black_user_title == "None")

players_titles_connections$combined_titles <- paste(players_titles_connections$players_white_user_title, 
                                                    players_titles_connections$players_black_user_title,
                                                    sep = "-")

players_titles_connections %>% 
  ggplot(aes(y = fct_reorder(combined_titles, mean_white_winner),
             x = mean_white_winner,
             fill = fct_reorder(combined_titles, mean_white_winner))) +
  geom_bar(stat = "identity") +
  theme(legend.position = "none")


players_titles_connections %>% 
  ggplot(aes(x = players_white_user_title, players_black_user_title, fill = mean_white_winner)) +
  geom_tile()

```

Jakie są najczęstsze połączenia między tytułami?

```{r}
links <- data %>% 
  filter(speed == "bullet") %>% 
  group_by(players_white_user_title, players_black_user_title) %>% 
  summarise(n = n()) %>% 
  filter(n > 50)

links <- as.data.frame(links)
links$players_black_user_title <- paste(links$players_black_user_title, " ", sep="")

nodes <- data.frame(name=c(as.character(links$players_white_user_title), as.character(links$players_black_user_title)) %>% unique())

links$IDsource <- match(links$players_white_user_title, nodes$name)-1 
links$IDtarget <- match(links$players_black_user_title, nodes$name)-1

ColourScal  <- 'd3.scaleOrdinal() .range(["#FDE725FF","#B4DE2CFF","#6DCD59FF","#35B779FF","#1F9E89FF","#26828EFF","#31688EFF","#3E4A89FF","#482878FF","#440154FF"])'


p <- sankeyNetwork(Links = links, Nodes = nodes,
                     Source = "IDsource", Target = "IDtarget",
                     Value = "n", NodeID = "name", 
                     sinksRight=FALSE, colourScale=ColourScal, nodeWidth=40, fontSize=13, nodePadding=20)
```

Widać wyraźnie dominację meczy między graczami bez tytułów

Jak ma się czas trwania partii do jej rezultatu?

```{r}
data %>% 
  filter(speed == "bullet") %>% 
  mutate(duration = duration_in_miliseconds / 1000) %>% 
  group_by(winner) %>% 
  summarise(mean_duration =  mean(duration)) %>% 
  ggplot(aes(x = fct_infreq(winner, mean_duration), y = mean_duration , fill = winner)) +
  geom_bar(stat = "identity")




important_statuses <- data %>% 
  count(status) %>%  filter(n > 1000)


data %>% 
  filter(status %in% important_statuses$status) %>% 
  ggplot(aes(x = winner, fill = status)) +
  geom_bar(position = "fill") +
  coord_polar() # Bez sensu
```

Oczywiście, dla remisów czas ten będzie dużo dłuższy, ponieważ do remisó dochodzi przy przekroczeniu czasu przez jednego gracza, po długiej końcówce,

Czy partie mistrzów trwają dłużej?

```{r}

players_titles_top_10 <- data %>% 
  mutate(duration = duration_in_miliseconds / 1000) %>% 
  filter(speed == "bullet") %>% 
  group_by(players_white_user_title, players_black_user_title) %>% 
  summarise(n = n(),
            mean_duration = mean(duration)) %>% 
  arrange(desc(n)) %>% 
  head(n = 10)


players_titles_top_10$combined_titles <-  paste(players_titles_top_10$players_white_user_title, 
                                                    players_titles_top_10$players_black_user_title,
                                                    sep = "-")

players_titles_top_10 %>% 
  ggplot(aes(x = fct_infreq(combined_titles, mean_duration),
             y = mean_duration,
             fill = fct_infreq(combined_titles, mean_duration))) +
  geom_bar(stat = "identity") +
  theme(legend.position = "none")
```

Czas trwania partii a jej wynik?

```{r}
data %>% 
  mutate(duration = duration_in_miliseconds / 1000) %>% 
  filter(speed == "blitz") %>% 
  ggplot(aes(x = winner, y = duration, fill = winner)) +
  geom_boxplot()
```

Czy gry między graczami z dużą różnicą rankingu są sporo krótsze?

```{r}
data %>% 
  filter(speed == "bullet") %>% 
  mutate(duration = duration_in_miliseconds / 1000,
         ranking_diff = abs(players_white_rating - players_black_rating),
         combined_titles = paste(players_white_user_title, 
                                 players_black_user_title,
                                                    sep = "-")) %>% 
  filter(combined_titles %in% players_titles_top_10$combined_titles) %>% 
  ggplot(aes(x = duration, y = ranking_diff, color = combined_titles)) +
  geom_point()

# Do poprawienia
```

Czy ACPL różni się między różnymi statusami gry?

```{r}
data %>% 
  filter(speed == "classical") %>% 
  filter(!(status %in% c("noStart", "cheat"))) %>% 
  ggplot(aes(x = status,
             y = players_white_analysis_acpl,
              fill = status)) +
  geom_bar(stat = "identity") 

# Nic ciekawego
```

Jak mają się rodzaje otwarć do formatu czasowego, to znaczy jakie otwarcia spotkamy częściej dla danego formatu czasowego?

```{r}
data %>% 
  mutate(opening_eco_group = str_sub(opening_eco, start = 1, end = 1)) %>%
  filter(!is.na(opening_eco_group)) %>% 
  ggplot(aes(fill = opening_eco_group, x= speed)) +
  geom_bar(position = "fill")

print(data %>% 
  mutate(opening_eco_group = str_sub(opening_eco, start = 1, end = 1)) %>%
  filter(!is.na(opening_eco_group)) %>% 
  group_by(opening_eco_group, speed) %>% 
  count(sort = TRUE), n = 30)
```

Jak różnią się ilości błędów i ich rodzaje w zależności od formatu czasowego?

```{r}
w_players_a <- data %>%
  select(speed,
         players_white_user_name,
         players_white_analysis_inaccuracy,
         players_white_analysis_mistake, 
         players_white_analysis_blunder,
         players_white_analysis_acpl) %>%
  rename(
         player = players_white_user_name, 
         players_inaccuracies = players_white_analysis_inaccuracy,
         players_mistakes = players_white_analysis_mistake,
         players_blunders = players_white_analysis_blunder,
         acpl = players_white_analysis_acpl
         )

b_players_a <- data %>%
  select(speed,
         players_black_user_name,
         players_black_analysis_inaccuracy,
         players_black_analysis_mistake, 
         players_black_analysis_blunder,
         players_black_analysis_acpl) %>%
  rename(player = players_black_user_name, 
         players_inaccuracies = players_black_analysis_inaccuracy,
         players_mistakes = players_black_analysis_mistake,
         players_blunders = players_black_analysis_blunder,
         acpl = players_black_analysis_acpl
         )

players_a <- rbind(w_players_a, b_players_a)

players_mistakes_animation <- players_a %>% 
  select(speed,
         players_inaccuracies,
         players_mistakes,
         players_blunders)

data_long <- gather(players_mistakes_animation, key = "error_type", value = "error_count", -speed)


data_long$error_type <- factor(
  data_long$error_type,
  levels = c(
             "players_inaccuracies",
             "players_mistakes",
             "players_blunders"
  )
                        )

data_long <- data_long %>% 
  group_by(speed, error_type) %>% 
  summarise(mean_a = mean(error_count, na.rm = TRUE))


legend_labels <- c(
  "players_inaccuracies" = "Liczba nieścisłości",
  "players_mistakes" = "Liczba błędów",
  "players_blunders" = "Liczba poważnych błędów"
)
new_order <- c("classical", "rapid", "blitz", "bullet", "ultraBullet")


p <- ggplot(data_long, aes(x = error_type, y = mean_a, fill = error_type)) +
      geom_bar(stat = "identity", position = "dodge") +
      labs(title = 'Format czasowy: {closest_state}') +
      scale_x_discrete(name = NULL, labels = c("Inaccuracies", "Mistakes", "Blunders")) +
      scale_y_continuous(name = "Średnia liczba błędów gracza w grze") +
      scale_fill_manual(values = c("red", "blue", "green"), name = "Rodzaj błędu", labels = legend_labels) + 
      theme_minimal() +
      theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
            panel.background = element_rect(fill = "lightgrey"),
            plot.background = element_rect(fill = "lightgrey"),
            legend.position = "top") 


p <- p + 
  transition_states(factor(speed, levels = new_order), transition_length = 2, state_length = 5) +
  ease_aes("linear")



animate(p)
anim_save("number_of_mistakes_for_each_speed.gif")
```

```{r}
data %>% 
  mutate(duration = duration_in_miliseconds / 1000) %>% 
  filter(duration < 2000) %>% 
  ggplot(aes(x = duration)) +
  geom_freqpoly()


data %>% 
  mutate(duration_s = duration_in_miliseconds / 1000,
         duration_min = ceiling(duration_in_miliseconds / 60000)) %>% 
  filter(duration_s < 2000) %>% 
  ggplot(aes(x = players_white_analysis_mistake,
             y = players_white_analysis_blunder)) +
  geom_point() +
  labs(title = "Time : {frame_time}") +
  transition_time(duration_min)  #Kiepskie wykresy
```

```{r}
data %>% 
  filter(status %in% c("draw", "outoftime", "resign", "mate")) %>% 
  ggplot(aes(x = status,
             y = players_white_analysis_mistake,
             fill = status)) +
  geom_violin()


# Partie z outoftime maja sporo wyzsze wskazania na bledy, co moze sugerowac ze gracze pod presją czasu zaczynają popełniać wiele błędów
```

Wykres średnich wartości ACPL dla kazdego z ruchow we wszystkich partiach

```{r}
data %>% 
  mutate(opening_eco_group = str_sub(opening_eco, start = 1, end = 1),
         duration = duration_in_miliseconds / 1000) %>%
  filter(!is.na(opening_eco_group) & duration < 2000) %>% 
  ggplot(aes(x = opening_eco_group, y = duration)) +
  geom_boxplot()

#Niekoniecznie przydatne
```

Czy niektóre otwarcia są bardziej popularne u poszczególnych typów graczy (tytuł gracza)?

```{r}
data %>% 
  mutate(opening_eco_group = str_sub(opening_eco, start = 1, end = 1)) %>% 
  filter(speed == "bullet" & !is.na(opening_eco_group)) %>% 
  count(opening_eco, players_white_user_title) %>% 
  arrange(desc(n))

#Moze da sie wyciagnac jakies wnioski
```

```{r}
first_move_count <- data %>% 
  mutate(first_move = str_extract(moves, "^\\w+"),
         first_move = as.factor(first_move)) %>% 
  count(first_move) %>%
  filter(n > 90) 

data %>% 
 mutate(first_move = str_extract(moves, "^\\w+"),
       first_move = as.factor(first_move)) %>% 
 filter(first_move %in% first_move_count$first_move) %>% 
 ggplot(aes(x = first_move, fill = winner)) +
 geom_bar(position = "fill")

# Nic ciekawego, można to jeszcze przejrzec
```

```{r}
data %>% 
 mutate(number_of_moves = str_count(moves, " ") + 1) %>% 
 ggplot(aes(x = number_of_moves)) +
  geom_freqpoly()

data %>% 
  mutate(number_of_moves = str_count(moves, " ") + 1) %>% 
  group_by(speed) %>% 
  summarise(mean_moves_number = mean(number_of_moves, na.rm = TRUE)) %>% 
  ggplot(aes(x = speed, y = mean_moves_number, fill = speed)) + 
  geom_bar(stat = "identity") +
  theme(legend.position = "none")

data %>% 
  mutate(number_of_moves = str_count(moves, " ") + 1) %>% 
  ggplot(aes(x = speed, y = number_of_moves)) +
  geom_violin()
  
# A to ciekawe, srednia dlugosc ruchow dla bulleta jest najwyzsza, zastanowic sie jak to mozliwe
```

Jak się ma ranking gracza do jego rankingu?

```{r}
data %>% 
  filter(speed == "bullet") %>% 
  filter(players_white_user_title %in% c("GM", "IM", "FM", "None")) %>% 
  ggplot(aes(x = players_white_user_title, y = players_white_analysis_mistake)) +
  geom_violin()

#Przepatrzec reszte moze da sie cos powiedziec na temat FM-ow
```

```{r}
  data_pie <- data %>%
    count(winner)
  pie(data_pie$n, labels = c("Black", "Draw", "White"), border = "white", col = brewer.pal(5, "Set2") ,radius = 1)
```


